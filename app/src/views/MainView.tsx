import {Avatar, AvatarGroup, Box, Stack} from "@mui/material";
import CreateMeet from "../dialogs/CreateMeet";
import React, {useState} from "react";
import {makeStyles} from "@mui/styles";
import {useAuth} from "../tools/auth";
import {useLocalStorage, useToggle} from "usehooks-ts";
import {Burger} from "../components/Burger";
import {Outlet, useLocation, useNavigate} from "react-router-dom";
import {Header} from "../components/Header";

const useStyles = makeStyles(() => ({
    root: {
        backgroundColor: '#F5F5F5',
        display: 'flex',
        flexDirection: 'column',
        height: '100vh'
    },
    header: {
        padding: '11px 15px 11px 15px',
        background: 'linear-gradient(180deg, #FFB628 0%, #FF8F28 100%)',
    },
    outlet: {
        backgroundColor: '#F5F5F5',
    },
    bottomNavigation: {
        backgroundColor: 'white',
        boxShadow: 'rgba(0, 0, 0, 0.05) 0px -4px 20px, rgba(0, 0, 0, 0.05) 0px -1px 0px',
        padding: '8px 0 6px',
        zIndex: 10
    },
}));

export default function MainView(): JSX.Element {
    const classes = useStyles();
    const navigate = useNavigate();
    const location = useLocation();

    const { isAuth, passport, authFn } = useAuth();
    const [meet, toggleMeet] = useToggle()
    const onAdd = authFn(toggleMeet)

    const getColor = (value: string) => location.pathname === value ? "#FF9329" : "#A5A5A5"

    return (
        <>
            <Box className={classes.root}>
                <Header>
                    {isAuth && <Burger />}
                    {Boolean(passport?.users?.length) && (
                        <Box sx={{ display: 'flex' }}>
                            <AvatarGroup max={4}>
                                {passport.users.map((user) => <Avatar key={user.id} alt={user.title} src={user.image} sx={{ width: 21, height: 21 }} />)}
                            </AvatarGroup>
                        </Box>
                    )}
                </Header>
                <div style={{ flex: '1 1 auto', overflowY: 'auto' }}>
                    <Outlet />
                </div>
                <div className={classes.bottomNavigation} style={{ fontSize: 9 }}>
                    <Stack spacing={2} direction="row" justifyContent="space-evenly" style={{ width: '100%' }}>
                        <Stack spacing={1} direction="row" alignItems="center" onClick={() => navigate("/projects")} style={{ padding: 8 }}>
                            <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path fillRule="evenodd" clipRule="evenodd" d="M8.69701 13.3851C8.83681 13.3466 8.97744 13.3079 9.11908 13.2689C9.2124 13.4905 9.30619 13.7145 9.40061 13.94C9.57478 14.356 9.75111 14.7771 9.93063 15.1982C10.0254 15.4323 10.0975 15.4474 10.2795 15.2662C10.3809 15.1653 10.4825 15.0643 10.5842 14.9634C10.8895 14.6601 11.1953 14.3563 11.4968 14.0504C11.9216 13.6162 12.1415 13.099 12.1263 12.4873C12.1232 12.378 12.1166 12.2694 12.1101 12.1611C12.1012 12.0113 12.0922 11.8623 12.0922 11.7133C12.0922 11.6453 12.1301 11.5547 12.1832 11.5132C14.3145 9.89719 15.7593 7.79036 16.6657 5.29463C17.1397 3.98447 17.4317 2.62899 17.6062 1.25087C17.6782 0.661863 17.2156 0.159697 16.6278 0.238986C15.8807 0.337154 15.1298 0.450424 14.3979 0.624106C11.1404 1.39435 8.36063 2.94238 6.29764 5.63822C6.26351 5.68352 6.18766 5.72506 6.13078 5.72506C5.91462 5.72883 5.69846 5.72128 5.4861 5.7024C4.82624 5.64954 4.24982 5.8421 3.77579 6.29896C3.4296 6.62851 3.09071 6.97017 2.75328 7.31037C2.66932 7.39501 2.58545 7.47956 2.50159 7.56381C2.3499 7.71862 2.36506 7.79413 2.56985 7.8772C2.91871 8.02321 3.26888 8.16793 3.61959 8.31287C3.86741 8.4153 4.1155 8.51783 4.36359 8.62101C4.40992 8.63894 4.4545 8.66036 4.48666 8.67581C4.50189 8.68313 4.51433 8.68911 4.52286 8.69274C4.47451 8.87085 4.4269 9.04724 4.37966 9.22229C4.24161 9.73374 4.10666 10.2337 3.9654 10.7316C3.93506 10.8487 3.9654 10.9128 4.04504 10.9921C4.95518 11.8945 5.86153 12.7969 6.7603 13.7069C6.88165 13.8315 6.99542 13.8579 7.15469 13.8126C7.66333 13.6696 8.17434 13.5289 8.69701 13.3851ZM12.0012 4.20723C12.8924 4.20723 13.6091 4.92461 13.6053 5.81945C13.6053 6.71429 12.8962 7.41656 11.9936 7.41656C11.11 7.41279 10.4009 6.70296 10.3933 5.81945C10.3857 4.93971 11.1176 4.20723 12.0012 4.20723ZM1.12166 13.9938C1.444 13.9598 1.75876 13.9787 2.08489 14.0958C2.02422 14.1524 1.97872 14.1939 1.93321 14.2354L1.9332 14.2355C0.920668 15.1378 0.583157 16.2403 0.954798 17.5543C1.01927 17.7771 1.17854 17.8337 1.32644 17.6827C1.5919 17.407 1.92183 17.2409 2.27071 17.1088C2.75439 16.9245 3.26157 16.8431 3.77005 16.7616C3.90742 16.7396 4.04489 16.7175 4.18201 16.6934C4.9215 16.5613 5.47138 16.1573 5.68754 15.4097C5.8544 14.832 5.62686 14.3261 5.28556 13.8654C5.14904 13.6804 5.13387 13.6804 4.97839 13.8466C4.59158 14.2657 4.10617 14.4733 3.54112 14.4998C3.34013 14.5073 3.29083 14.462 3.29462 14.2657C3.30221 13.6729 3.53733 13.182 3.98102 12.7969C4.09858 12.6912 4.10617 12.6195 3.96585 12.5402C3.92284 12.5151 3.88012 12.4892 3.83728 12.4632C3.72528 12.3952 3.61252 12.3267 3.49182 12.2721C2.79784 11.9549 2.17211 12.0569 1.61086 12.5742C1.28093 12.8762 1.04581 13.2462 0.8562 13.6465C0.818277 13.7257 0.795523 13.8654 0.841031 13.9183C0.894122 13.9787 1.02685 14.0051 1.12166 13.9938Z" fill={getColor('/projects')}/>
                            </svg>
                            <span style={{ fontSize: 9, fontWeight:900, textTransform: 'uppercase', color: getColor('/projects') }}>Проекты</span>
                        </Stack>
                        <Stack spacing={1} direction="row" alignItems="center" onClick={() => navigate("/")}>
                            <svg width="30" height="16" viewBox="0 0 30 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path fillRule="evenodd" clipRule="evenodd" d="M11.0113 3.74323C10.9832 5.90636 12.7531 7.59192 14.7336 7.53573C16.4894 7.6481 18.512 6.32775 18.5542 3.8556C18.5823 1.86103 17.1074 0.0771484 14.8038 0.0771484C12.2334 0.0771484 11.0394 2.12791 11.0113 3.74323ZM8.20188 15.7948H14.8036H21.3352C21.3919 15.7948 21.4469 15.7964 21.5015 15.798H21.5015H21.5016H21.5016H21.5016C21.6093 15.8011 21.715 15.8041 21.8268 15.7948C22.2903 15.7667 22.3465 15.7105 22.3606 15.261C22.3746 14.5447 22.3886 13.8143 22.3606 13.0979C22.3465 12.6625 22.3184 12.213 22.2201 11.7916C21.7847 10.0358 20.675 8.9121 18.9192 8.43453C18.4276 8.29406 18.0062 8.36429 17.5567 8.71545C15.9273 10.0077 13.694 10.0218 12.0506 8.7295C11.6292 8.40643 11.2359 8.30811 10.7583 8.43453C8.93229 8.92615 7.68217 10.0358 7.37315 11.918C7.24464 12.7187 7.24831 13.5404 7.25197 14.3584C7.25352 14.7026 7.25505 15.0463 7.24673 15.3874C7.23269 15.6403 7.3872 15.7667 7.64003 15.7807C7.82263 15.7948 8.01928 15.7948 8.20188 15.7948ZM8.90438 5.21821C8.97461 6.81949 7.56998 8.26626 5.84228 8.26626C4.53598 8.26626 2.79424 7.31111 2.78019 5.20416C2.76614 3.25173 4.32528 2.08588 5.89847 2.12802C7.97732 2.18421 8.98866 3.86976 8.90438 5.21821ZM20.6886 5.17637C20.6605 6.89002 22.1072 8.30869 23.7085 8.25251C25.1412 8.35083 26.8127 7.25522 26.8408 5.20446C26.8549 3.3363 25.38 2.12832 23.7787 2.14237C21.728 2.15641 20.7026 3.79983 20.6886 5.17637ZM2.97667 14.4186C2.71863 14.4186 2.46059 14.4202 2.20308 14.4217H2.20293C1.68951 14.4249 1.17818 14.428 0.673075 14.4186C0.0971765 14.4046 0.0690839 14.3905 0.0550376 13.8287C0.0409913 13.1825 0.026945 12.5364 0.0550376 11.8903C0.125269 10.2609 1.55799 8.94055 3.21546 8.99674C3.38401 8.99674 3.59471 9.06697 3.72112 9.16529C4.22679 9.60073 4.78864 9.8957 5.46286 9.97998C5.70165 10.0081 5.82807 10.1204 5.82807 10.3873C5.82807 11.5953 5.84211 12.8033 5.85616 13.9972C5.85616 14.3062 5.7157 14.4046 5.43477 14.4046C5.01865 14.4046 4.60607 14.4081 4.19525 14.4116H4.19521L4.19501 14.4116C3.78774 14.4151 3.3822 14.4186 2.97667 14.4186ZM25.8298 14.4215C26.0874 14.4199 26.3449 14.4183 26.6024 14.4183C26.8056 14.4183 27.0097 14.4192 27.2143 14.4201C27.8297 14.4227 28.449 14.4254 29.0605 14.4043C29.4959 14.3902 29.5381 14.3341 29.5521 13.9127C29.5662 13.2806 29.5662 12.6626 29.5521 12.0305C29.51 10.3028 28.1896 9.01051 26.4619 8.99647C26.2512 8.98242 25.9984 9.08074 25.8298 9.20716C25.3382 9.60046 24.8325 9.89543 24.2005 9.96566C23.8914 10.0078 23.7791 10.1483 23.7791 10.4713C23.7951 11.1374 23.7928 11.799 23.7905 12.4611C23.7888 12.9579 23.7871 13.4551 23.7931 13.9548C23.7931 14.3902 23.8072 14.4183 24.2847 14.4183C24.7998 14.4277 25.3148 14.4246 25.8298 14.4215Z" fill={getColor('/')} />
                            </svg>
                            <span style={{ fontSize: 9, fontWeight:900, textTransform: 'uppercase', color: getColor('/') }}>Встречи</span>
                        </Stack>
                    </Stack>
                </div>
            </Box>
            <CreateMeet open={meet} onClose={toggleMeet} />
        </>
    )
};
