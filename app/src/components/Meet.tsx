import React, {useState} from 'react';
import {makeStyles} from '@mui/styles';
import {Avatar, AvatarGroup, Box, Button, Stack, Theme, Typography} from "@mui/material";
import {Meet, NewMeet, useMeet} from "../modules/meet";
import {convertToMeetDate, convertToMeetDateLong, convertToMeetTime} from "../tools/date";

const useStyles = makeStyles((theme: Theme) => ({
    container: {
        position: 'absolute',
        top: -38,
        backgroundColor: 'white',
        width: '100%',
        borderRadius: `38px 38px 0 0`,
        padding: '25px 33px'
    },
    block: {
        border: `1px solid ${theme.palette.divider}`,
        borderRadius: 12,
        padding: 12,
    },
    large: {
        width: theme.spacing(5),
        height: theme.spacing(5),
    },
    image: {
        width: '100%',
        height: 300,
        objectFit: 'cover',
    },
}));
interface MeetComponentProps {
    meet: Meet
    renderHeader?: () => JSX.Element
    renderFooter?: () => JSX.Element
}
export default function MeetComponent({meet, renderHeader, renderFooter}: MeetComponentProps) {
    const classes = useStyles();

    if (!meet) { return null }


    const parameters = [
        {
            icon: (
                <svg width="23" height="21" viewBox="0 0 23 21" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M3.62368 21H19.3879C21.7998 21 23 19.8137 23 17.4639V3.53612C23 1.18631 21.7998 0 19.3879 0H3.62368C1.21174 0 0 1.1749 0 3.53612V17.4639C0 19.8251 1.21174 21 3.62368 21ZM3.45058 19.1635C2.42348 19.1635 1.858 18.6274 1.858 17.5665V6.80989C1.858 5.76046 2.42348 5.21293 3.45058 5.21293H19.5379C20.565 5.21293 21.142 5.76046 21.142 6.80989V17.5665C21.142 18.6274 20.565 19.1635 19.5379 19.1635H3.45058ZM9.24385 9.30799H9.92474C10.3287 9.30799 10.4671 9.19392 10.4671 8.79468V8.12167C10.4671 7.72243 10.3287 7.59696 9.92474 7.59696H9.24385C8.83994 7.59696 8.70146 7.72243 8.70146 8.12167V8.79468C8.70146 9.19392 8.83994 9.30799 9.24385 9.30799ZM13.0868 9.30799H13.7561C14.1601 9.30799 14.2985 9.19392 14.2985 8.79468V8.12167C14.2985 7.72243 14.1601 7.59696 13.7561 7.59696H13.0868C12.6713 7.59696 12.5444 7.72243 12.5444 8.12167V8.79468C12.5444 9.19392 12.6713 9.30799 13.0868 9.30799ZM16.9182 9.30799H17.5991C18.003 9.30799 18.13 9.19392 18.13 8.79468V8.12167C18.13 7.72243 18.003 7.59696 17.5991 7.59696H16.9182C16.5143 7.59696 16.3758 7.72243 16.3758 8.12167V8.79468C16.3758 9.19392 16.5143 9.30799 16.9182 9.30799ZM5.41244 13.038H6.09333C6.49724 13.038 6.62418 12.924 6.62418 12.5247V11.8517C6.62418 11.4525 6.49724 11.3384 6.09333 11.3384H5.41244C5.00853 11.3384 4.87005 11.4525 4.87005 11.8517V12.5247C4.87005 12.924 5.00853 13.038 5.41244 13.038ZM9.24385 13.038H9.92474C10.3287 13.038 10.4671 12.924 10.4671 12.5247V11.8517C10.4671 11.4525 10.3287 11.3384 9.92474 11.3384H9.24385C8.83994 11.3384 8.70146 11.4525 8.70146 11.8517V12.5247C8.70146 12.924 8.83994 13.038 9.24385 13.038ZM13.0868 13.038H13.7561C14.1601 13.038 14.2985 12.924 14.2985 12.5247V11.8517C14.2985 11.4525 14.1601 11.3384 13.7561 11.3384H13.0868C12.6713 11.3384 12.5444 11.4525 12.5444 11.8517V12.5247C12.5444 12.924 12.6713 13.038 13.0868 13.038ZM16.9182 13.038H17.5991C18.003 13.038 18.13 12.924 18.13 12.5247V11.8517C18.13 11.4525 18.003 11.3384 17.5991 11.3384H16.9182C16.5143 11.3384 16.3758 11.4525 16.3758 11.8517V12.5247C16.3758 12.924 16.5143 13.038 16.9182 13.038ZM5.41244 16.7795H6.09333C6.49724 16.7795 6.62418 16.654 6.62418 16.2548V15.5817C6.62418 15.1825 6.49724 15.0684 6.09333 15.0684H5.41244C5.00853 15.0684 4.87005 15.1825 4.87005 15.5817V16.2548C4.87005 16.654 5.00853 16.7795 5.41244 16.7795ZM9.24385 16.7795H9.92474C10.3287 16.7795 10.4671 16.654 10.4671 16.2548V15.5817C10.4671 15.1825 10.3287 15.0684 9.92474 15.0684H9.24385C8.83994 15.0684 8.70146 15.1825 8.70146 15.5817V16.2548C8.70146 16.654 8.83994 16.7795 9.24385 16.7795ZM13.0868 16.7795H13.7561C14.1601 16.7795 14.2985 16.654 14.2985 16.2548V15.5817C14.2985 15.1825 14.1601 15.0684 13.7561 15.0684H13.0868C12.6713 15.0684 12.5444 15.1825 12.5444 15.5817V16.2548C12.5444 16.654 12.6713 16.7795 13.0868 16.7795Z" fill="black"/>
                </svg>
            ),
            title: 'Дата',
            value: convertToMeetDateLong(meet.datetime),
        },
        {
            icon: (
                <svg width="23" height="23" viewBox="0 0 23 23" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M11.5 23C17.7912 23 23 17.7799 23 11.5C23 5.20882 17.7799 0 11.4887 0C5.20882 0 0 5.20882 0 11.5C0 17.7799 5.2201 23 11.5 23ZM11.5 21.0833C6.17843 21.0833 1.92794 16.8216 1.92794 11.5C1.92794 6.17843 6.16716 1.91667 11.4887 1.91667C16.8103 1.91667 21.0721 6.17843 21.0833 11.5C21.0946 16.8216 16.8216 21.0833 11.5 21.0833ZM5.60343 12.7176H11.4887C11.9284 12.7176 12.2779 12.3794 12.2779 11.9284V4.32941C12.2779 3.88971 11.9284 3.55147 11.4887 3.55147C11.049 3.55147 10.7108 3.88971 10.7108 4.32941V11.1505H5.60343C5.15245 11.1505 4.81422 11.4887 4.81422 11.9284C4.81422 12.3794 5.15245 12.7176 5.60343 12.7176Z" fill="black"/>
                </svg>
            ),
            title: 'Начало',
            value: convertToMeetTime(meet.datetime),
        },
        // {
        //     icon: (
        //         <svg width="23" height="21" viewBox="0 0 23 21" fill="none" xmlns="http://www.w3.org/2000/svg">
        //             <path d="M3.62368 21H19.3879C21.7998 21 23 19.8137 23 17.4639V3.53612C23 1.18631 21.7998 0 19.3879 0H3.62368C1.21174 0 0 1.1749 0 3.53612V17.4639C0 19.8251 1.21174 21 3.62368 21ZM3.45058 19.1635C2.42348 19.1635 1.858 18.6274 1.858 17.5665V6.80989C1.858 5.76046 2.42348 5.21293 3.45058 5.21293H19.5379C20.565 5.21293 21.142 5.76046 21.142 6.80989V17.5665C21.142 18.6274 20.565 19.1635 19.5379 19.1635H3.45058ZM9.24385 9.30799H9.92474C10.3287 9.30799 10.4671 9.19392 10.4671 8.79468V8.12167C10.4671 7.72243 10.3287 7.59696 9.92474 7.59696H9.24385C8.83994 7.59696 8.70146 7.72243 8.70146 8.12167V8.79468C8.70146 9.19392 8.83994 9.30799 9.24385 9.30799ZM13.0868 9.30799H13.7561C14.1601 9.30799 14.2985 9.19392 14.2985 8.79468V8.12167C14.2985 7.72243 14.1601 7.59696 13.7561 7.59696H13.0868C12.6713 7.59696 12.5444 7.72243 12.5444 8.12167V8.79468C12.5444 9.19392 12.6713 9.30799 13.0868 9.30799ZM16.9182 9.30799H17.5991C18.003 9.30799 18.13 9.19392 18.13 8.79468V8.12167C18.13 7.72243 18.003 7.59696 17.5991 7.59696H16.9182C16.5143 7.59696 16.3758 7.72243 16.3758 8.12167V8.79468C16.3758 9.19392 16.5143 9.30799 16.9182 9.30799ZM5.41244 13.038H6.09333C6.49724 13.038 6.62418 12.924 6.62418 12.5247V11.8517C6.62418 11.4525 6.49724 11.3384 6.09333 11.3384H5.41244C5.00853 11.3384 4.87005 11.4525 4.87005 11.8517V12.5247C4.87005 12.924 5.00853 13.038 5.41244 13.038ZM9.24385 13.038H9.92474C10.3287 13.038 10.4671 12.924 10.4671 12.5247V11.8517C10.4671 11.4525 10.3287 11.3384 9.92474 11.3384H9.24385C8.83994 11.3384 8.70146 11.4525 8.70146 11.8517V12.5247C8.70146 12.924 8.83994 13.038 9.24385 13.038ZM13.0868 13.038H13.7561C14.1601 13.038 14.2985 12.924 14.2985 12.5247V11.8517C14.2985 11.4525 14.1601 11.3384 13.7561 11.3384H13.0868C12.6713 11.3384 12.5444 11.4525 12.5444 11.8517V12.5247C12.5444 12.924 12.6713 13.038 13.0868 13.038ZM16.9182 13.038H17.5991C18.003 13.038 18.13 12.924 18.13 12.5247V11.8517C18.13 11.4525 18.003 11.3384 17.5991 11.3384H16.9182C16.5143 11.3384 16.3758 11.4525 16.3758 11.8517V12.5247C16.3758 12.924 16.5143 13.038 16.9182 13.038ZM5.41244 16.7795H6.09333C6.49724 16.7795 6.62418 16.654 6.62418 16.2548V15.5817C6.62418 15.1825 6.49724 15.0684 6.09333 15.0684H5.41244C5.00853 15.0684 4.87005 15.1825 4.87005 15.5817V16.2548C4.87005 16.654 5.00853 16.7795 5.41244 16.7795ZM9.24385 16.7795H9.92474C10.3287 16.7795 10.4671 16.654 10.4671 16.2548V15.5817C10.4671 15.1825 10.3287 15.0684 9.92474 15.0684H9.24385C8.83994 15.0684 8.70146 15.1825 8.70146 15.5817V16.2548C8.70146 16.654 8.83994 16.7795 9.24385 16.7795ZM13.0868 16.7795H13.7561C14.1601 16.7795 14.2985 16.654 14.2985 16.2548V15.5817C14.2985 15.1825 14.1601 15.0684 13.7561 15.0684H13.0868C12.6713 15.0684 12.5444 15.1825 12.5444 15.5817V16.2548C12.5444 16.654 12.6713 16.7795 13.0868 16.7795Z" fill="black"/>
        //         </svg>
        //     ),
        //     title: 'Длительность',
        //     value: '3ч 30м',
        // },
        {
            icon: (
                <svg width="20" height="23" viewBox="0 0 20 23" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <mask id="path-1-inside-1_1_454" fill="white">
                        <path fillRule="evenodd" clipRule="evenodd" d="M10 0C15.5224 0 20 4.3825 20 9.78758C20 12.3359 19.005 14.657 17.3715 16.3938C17.073 16.7103 11.0033 22.5861 11.0033 22.5861C10.4312 23.138 9.51078 23.138 8.94693 22.5861L3.28358 17.043C3.28358 17.043 3.27529 17.0349 3.27529 17.0268C1.26036 15.2414 0 12.6605 0 9.78758C0 4.3825 4.47761 0 10 0ZM10 12C11.1067 12 12 11.1067 12 10C12 8.89778 11.1022 8 10 8C8.89333 8 8 8.89778 8 10C8 11.1022 8.89333 12 10 12Z"/>
                    </mask>
                    <path d="M17.3715 16.3938L18.8265 17.766L18.8283 17.764L17.3715 16.3938ZM11.0033 22.5861L12.3918 24.0256L12.3944 24.0231L11.0033 22.5861ZM8.94693 22.5861L10.3459 21.1568H10.3459L8.94693 22.5861ZM3.28358 17.043L1.88461 18.4723L1.88463 18.4724L3.28358 17.043ZM3.27529 17.0268H5.27529V16.1268L4.6017 15.5299L3.27529 17.0268ZM22 9.78758C22 3.23766 16.5863 -2 10 -2V2C14.4585 2 18 5.52733 18 9.78758H22ZM18.8283 17.764C20.7945 15.6736 22 12.8684 22 9.78758H18C18 11.8034 17.2155 13.6404 15.9146 15.0236L18.8283 17.764ZM11.0033 22.5861C12.3944 24.0231 12.3944 24.023 12.3945 24.023C12.3945 24.023 12.3946 24.0229 12.3947 24.0228C12.3949 24.0226 12.3951 24.0223 12.3955 24.022C12.3963 24.0213 12.3974 24.0202 12.3988 24.0188C12.4018 24.0159 12.4061 24.0117 12.4119 24.0061C12.4234 23.995 12.4405 23.9785 12.4627 23.9569C12.5073 23.9137 12.5727 23.8504 12.656 23.7697C12.8227 23.6084 13.061 23.3775 13.348 23.0995C13.9219 22.5435 14.6903 21.7987 15.4682 21.044C16.9884 19.569 18.6368 17.9671 18.8265 17.766L15.9165 15.0216C15.9247 15.0129 15.9083 15.03 15.8416 15.0963C15.7847 15.1528 15.7073 15.2291 15.6111 15.3235C15.4192 15.5118 15.1597 15.7653 14.8548 16.0624C14.2453 16.6563 13.4598 17.4193 12.6827 18.1732C11.9059 18.927 11.1382 19.671 10.5647 20.2266C10.278 20.5044 10.0398 20.7351 9.87339 20.8963C9.79016 20.9769 9.72485 21.0401 9.68036 21.0832C9.65812 21.1047 9.64108 21.1212 9.6296 21.1323C9.62387 21.1379 9.61952 21.1421 9.61661 21.1449C9.61516 21.1463 9.61406 21.1474 9.61333 21.1481C9.61296 21.1484 9.61269 21.1487 9.61251 21.1489C9.61242 21.1489 9.61235 21.149 9.6123 21.1491C9.61226 21.1491 9.61224 21.1491 11.0033 22.5861ZM7.54798 24.0154C8.89488 25.3337 11.0506 25.3193 12.3918 24.0256L9.61483 21.1466C9.81179 20.9566 10.1267 20.9422 10.3459 21.1568L7.54798 24.0154ZM1.88463 18.4724L7.54798 24.0154L10.3459 21.1568L4.68253 15.6137L1.88463 18.4724ZM1.27529 17.0268C1.27529 17.6447 1.55805 18.0634 1.62644 18.1639C1.6836 18.2478 1.73762 18.3135 1.77767 18.3593C1.79863 18.3832 1.81823 18.4045 1.83581 18.4229C1.84466 18.4322 1.85317 18.4409 1.86128 18.4491C1.86534 18.4532 1.86932 18.4572 1.8732 18.4611C1.87515 18.463 1.87707 18.4649 1.87897 18.4668C1.87992 18.4677 1.88087 18.4687 1.88181 18.4696C1.88228 18.4701 1.88275 18.4705 1.88322 18.471C1.88345 18.4712 1.8838 18.4715 1.88392 18.4717C1.88427 18.472 1.88461 18.4723 3.28358 17.043C4.68255 15.6137 4.6829 15.6141 4.68325 15.6144C4.68336 15.6145 4.68371 15.6149 4.68395 15.6151C4.68441 15.6156 4.68488 15.616 4.68535 15.6165C4.68629 15.6174 4.68723 15.6183 4.68818 15.6193C4.69007 15.6212 4.69199 15.623 4.69391 15.625C4.69777 15.6288 4.7017 15.6327 4.7057 15.6368C4.71369 15.6449 4.72202 15.6534 4.73064 15.6625C4.74776 15.6804 4.76672 15.701 4.7869 15.724C4.8254 15.768 4.87735 15.8312 4.93243 15.9121C4.98521 15.9896 5.06119 16.1128 5.12795 16.2762C5.19299 16.4353 5.27529 16.6958 5.27529 17.0268H1.27529ZM-2 9.78758C-2 13.2614 -0.472658 16.3779 1.94888 18.5237L4.6017 15.5299C2.99339 14.1048 2 12.0597 2 9.78758H-2ZM10 -2C3.41374 -2 -2 3.23766 -2 9.78758H2C2 5.52733 5.54148 2 10 2V-2ZM10 10V14C12.2112 14 14 12.2112 14 10H10ZM10 10H14C14 7.79321 12.2068 6 10 6V10ZM10 10V6C7.78587 6 6 7.7961 6 10H10ZM10 10H6C6 12.2039 7.78587 14 10 14V10Z" fill="black" mask="url(#path-1-inside-1_1_454)"/>
                </svg>

            ),
            title: 'Место',
            value: meet?.place?.title,
        }
    ]

    return (
        <div style={{ position: "relative"}}>
            <img src={meet.image ? meet.image : meet.project.image} className={classes.image}/>
            <div style={{ position: "absolute", top: 25, left: 21, right: 25 }}>
                {renderHeader && renderHeader()}
            </div>
            <div style={{ position: "relative"}}>
                <div className={classes.container}>
                    <div style={{ fontSize: 24, color: "black" }}>
                        {meet.title}
                    </div>
                    <div style={{ paddingTop: 31, color: '#070707', opacity: .6, fontSize: 18}}>
                        {meet.description}
                    </div>
                    <div style={{ paddingTop: 50}}>
                        <div style={{ color: '#070707', opacity: .4, fontSize: 18 }}>
                            Участники
                        </div>
                        {Boolean(meet.users.length) ? (
                            <Box sx={{ display: 'flex', paddingTop: 1 }}>
                                <AvatarGroup max={4}>
                                    {meet.users.map((user) => (
                                        <Avatar alt={user.title} src={user.image} />
                                    ))}
                                </AvatarGroup>
                            </Box>
                        ) : (
                            <Typography variant="body2" color="textSecondary">
                                Участников нет
                            </Typography>
                        )}
                    </div>
                    <div id="parameters" style={{ paddingTop: 50}}>
                        <Stack spacing={2} direction="column">
                            {parameters.map(({ icon, title, value }, index) => (
                                <Stack spacing={2} direction="row" justifyContent="space-between">
                                    <Stack spacing={2} direction="row" alignItems="center">
                                        {icon}
                                        <div style={{ fontSize: 18, fontWeight: 900, color: '#070707' }}>
                                            {title}
                                        </div>
                                    </Stack>
                                    <div style={{ fontSize: 18, color: '#070707' }}>
                                        {value}
                                    </div>
                                </Stack>
                            ))}
                        </Stack>
                    </div>
                    {/*<div style={{ paddingTop: 50}}>*/}
                    {/*    <img src="/1686906706498.jpg" style={{ width: '100%', display: 'block' }}/>*/}
                    {/*</div>*/}
                    <div style={{ paddingTop: 22, marginLeft: -11, marginRight: -11 }}>
                        {renderFooter && renderFooter()}
                    </div>
                </div>
            </div>

        </div>
    );
}
